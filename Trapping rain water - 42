Trapping rain water
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

Example 1:
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9

Constraints:

n == height.length
1 <= n <= 2 * 104
0 <= height[i] <= 105

solution:
=>Two Pointer Approach
class Solution:
    def trap(self, h: List[int]) -> int:
        l=0;r=len(h)-1;lm=0;rm=0;res=0
        while(l<r):
            if(h[l]<=h[r]):
                if(h[l]>lm):
                    lm=h[l]
                else:
                    res+=lm-h[l]
                l+=1
            else:
                if(h[r]>rm):
                    rm=h[r]
                else:
                    res+=rm-h[r];
                r-=1
        return res
