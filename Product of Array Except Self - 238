238. Product of Array Except Self
Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.
Example 1:
Input: nums = [1,2,3,4]
Output: [24,12,8,6]
Example 2:
Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]
 
Constraints:
2 <= nums.length <= 105
-30 <= nums[i] <= 30
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

Solution:

class Solution {
    public int[] productExceptSelf(int[] arr) {
            int[] left= new int[arr.length];
            // int[] right=new int[arr.length];
            left[0]=1;
            for(int i=1; i< arr.length; i++)
            {
                left[i]=left[i-1]*arr[i-1];
            }
            // return left;
            int right=1;
            for(int i=arr.length-1; i>=0;i--)
            {
                left[i]=left[i]*right;
                right*=arr[i];
            }            // return right;
            // for(int i=0;i<arr.length;i++)
            // {
            //     arr[i]=left[i]*right[i];
            // }
            
        return left;
    }
}
